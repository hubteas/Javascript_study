day59
웹개발4 6일차(js 6일차)
DOM -> 이벤트 -> DOM과 이벤트

1. DOM
1) DOM API
   문서의 객체 모델을 의미(Documnet Object Model)
   div, span, input과 같은 요소들을 모두 DOM이라고 한다
   HTML 태그들을 하나씩 객체화 한 것을 의미한다
   HTML 페이지 내용과 모양을 제어하기 위해 사용하는 객체이며 HTML 태그 당 DOM 객체가 하나씩 생성된다
   HTML 태그의 포함관계에 따라서 부모, 자식, 형재 관계로 구성된다

2) API(Application Programming Interface)
   소프트웨어 응용프로그램들이 서로 상호작용할 수 있도록 해주는 규칙과 프로토콜의 집합
   API는 서로 다른 소프트웨어 응용프로그램들이 서로 통신할 수 있게 해준다
   응용프로그램 사이에서 동선에 사용되는 언어와 메시지를 의미한다
   API를 자원별 구분하는 것을 REST API라고 한다
   * REST API : 웹 서비스에서 주로 사용되는 아키텍처 스타일로 HTTP 프로토콜을 통해 데이터를 주고받는다

3) DOM selector 종류
   - document.getElementById("id명")       //단일 객체 반환, HttpCollection
      id속성에 해당하는 요소 선택
   - document.getElementsByClassName("class명")    //HttpCollection
      지정한 클래스 이름을 가진 모든 요소를 선택
   - document.getElementsByTagName("tag명")    //HttpCollection
      지정한 태그 이름을 가진 모든 요소를 선택      

   - document.getElementByName("name")      //유사배열 객체 반환, NodeList
      지정한 이름을 가진 모든 요소를 선택
   - document.querySelector('선택자')          //NodeList
      CSS 선택자 문법을 사용하여 일치하는 첫번째 요소를 선택
   - document.querySelectorAll('선택자')         //NodeList
      CSS 선택자 문법을 사용하여 일치하는 모든 요소를 선택

4) HttpCollection과 NodeList
   HttpCollection : live   //실시간 변화를 감시
   NodeList : noneLive   //실시간 변화를 감시하지 않는다

5) innerHTML과 innerText
   요소의 내용을 조작할 때 사용하는 속성

- innerHTML
   요소의 내부 HTML을 나타내는 속성
   HTML 태그를 포함한 요소의 내용을 변경할 수 있다
   ex) const test = document.getElementById("test");
      test.innerHTML = "<strong>안녕</strong>";

- innerText
   요소의 텍스트 내용을 나타내는 속성
   HTML 태그를 고려하지않고 텍스트 내용만 조작할 수 있다
   ex) const test = document.getElementById("test");
      test.innerText = "안녕하세요";

2. 이벤트
   발생한 사건을 말한다
   사용자가 버튼을 클릭하거나 항목을 선택하는 등의 사건을 이벤트라고한다
   이벤트가 발생하면 자바스크립트의 코드가 실행되도록 구현하여 사용자와 상호작용하는 페이지를 만들 수 있다

1) 마우스 이벤트
   click : 요소를 클릭하면 발생
   mouseover : 마우스 커서를 해당 요소에 올리면 발생
   mouseout : 마우스 커서가 해당 요소의 영역을 벗어나면 발생
   ..

2) 키보드 이벤트
   keydown : 키보드를 누르는 동안 발생
   keyup : 키보드를 눌렀다가 뗄 때 발생
   keypress : 키보드를 눌렀을 때 발생
   ...

3) 문서로딩 이벤트
   load : 문서(웹페이지)가 로딩이 끝나면 발생
   unload : 문서를 벗어날 때 발생
   scroll : 문서가 스크롤되면 발생
   ..

4) 폼 이벤트
   입력이 가능한 요소의 이벤트
   focus : 폼 요소에 포커스가 되면 발생
   blur : 포커스를 잃으면 발생
   change : 입력값이 바뀌거나 체크상태가 변경되면 발생
   submit : submit 버튼을 누르면 발생

3. DOM과 이벤트
   기존의 이벤트 처리방식은 html 코드에 자바스크립트를 사용하였다
   가독성과 유지보수에 좋지 않다
   DOM을 사용하여 자바스크립트에 HTML 요소를 불러와서 이벤트를 처리할 수 있다

1) DOM 사용하기
   document.메소드()
   DOM에서는 HTML 요소를 선택자를 이용해 접근하는 여러 메소드를 제공한다

getElementById("id명")
   태그의 id속성으로 해당 요소를 가져온다
   id는 중복을 허용하지 않으므로 메소드의 결과 객체 1개이다
getElementsByClassName("class명")
   태그의 class 속성으로 해당 요소를 가져온다
   class는 여러 요소가 같은 값을 가질 수 있으므로 메소드의 결과는 여러 객체를 담은 배열이다
querySelector('선택자')
   id, class 외에도 여러 방법으로 요소를 가져올 수 있다
   css의 선택자를 활용하면 되므로 id는 #으로, class는 .으로 사용하여 선택자를 작성한다
   1개의 요소를 가져올 때 사용하며 메소드의 결과는 객체 1개를 반환한다
querySlectorAll('선택자')
   id, class 외에도 여러 방법으로 요소를 가져올 수 있다
   css의 선택자를 활용하면 되므로 id는 #으로, class는 .으로 사용하여 선택자를 작성한다
   여러개의 요소를 가져올 때 사용하며 메소드의 결과는 객체를 담은 배열을 반환한다

- 요소 내용 가져오기, 수정하기
   요소.innerHTML
      요소의 text와 내부의 태그까지 가져온다
   요소.innerText
      요소의 text를 가져온다




