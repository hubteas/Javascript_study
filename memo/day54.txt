day54(웹개발4 1일차)
------------------------------------------------------
웹개발4 수업일정
   
월   화   수   목   금
         08-08   08-09   
08-12   08-13   08-14   
08-19   08-20   08-21   08-22   08-23
            (휴강될확률있음/보강8월30일 수업진행-이번주중으로 재안내)
08-26   08-27   08-28   08-29   
09-02   09-03   09-04   09-05   

웹개발4 수업 => javascript, vue.js
------------------------------------------------------
javascript 1일차
자바스크립트 -> js 환경 구축 -> 자바스크립트 기본 문법

0. 복습
   HTML      웹의 구조/내용 작성
   CSS      웹 디자인(색상, 정렬, 배치-레이아웃, 이벤트 등)
   Javascript   웹의 동작 구현

1. 자바스크립트(javascript)
   객체기반의 스크립트언어
   컴파일 과정이 없이 브라우저 내부의 자바스크립트 처리기(인터프리터)에 의해 바로 실행된다
   ※ 개발이 발전됨에 따라 컴파일 과정이 가능해졌으며, Node.js로 서버환경을 구축한다

   자바스크립트----인터프리터----컴퓨터
   웹 브라우저에는 자바스크립트 소스를 읽고 처리하는 해석기가 있으며
   자바스크립트 소스는 웹 문서(.html)에서 <script></script>태그를 이용해 작성할 수 있다
   소스만 별도 스크립트 파일로 작성 후 웹 문서와 연결해서 사용할 수 있다(.js)

1) 자바스크립트 역사
   1995년 넷스케이프사 브렌던아이크가 개발
   모카 -> 라이브스크립트 -> 자바스크립트
   
   초창기 자바스크립트는 웹페이지의 보조적인 기능을 수행하기 위해 한정적인 용도로 사용했다
   대부분의 로직은 주로 웹 서버에서 실행되고 브라우저는 전달받은 HTML과 CSS를 단순히
   렌더링 하는 수준으로 사용했다
   * 렌더링 : HTML, CSS, 자바스크립트로 작성된 문서를 해석해서 브라우저에서 
   시각적으로 출력하는 것을 의미함
   때로는 서버에서 데이터를 HTML로 변환해서 브라우저에게 전달하는 과정
   (SSR : Server Side Rendering) 을 의미하기도함

2) 자바스크립트 특징
   퍼즐조각처럼 코드형태로 html 페이지에 내장된다
   컴파일 과정이 없이 브라우저 내부의 자바스크립트 처리기(인터프리터)에 의해 바로 실행

   [index.html]   [웹 브라우저]
   <script>
     자바스크립트코드   -> 인터프리터 -> 결과출력
   </script>

3) 자바와 자바스크립트의 차이
   직접적인 관련은 없다
   문법상 비슷한 부분은 C언어를 기반으로 만들어졌기 때문이다
   
   자바         자바스크립트
   컴파일언어         인터프리터언어
   타입검사를 엄격하게 함   타입을 명시하지 않음(동적바인딩)
   클래스 기반의 객체지향언어   프로토 타입 기반의 객체지향언어

4) 웹 페이지에서 자바스크립트의 역할
   웹페이지는 3가지(html, css, javascript) 코드가 결합되어 작성된다
   자바스크립트는 사용자의 입력을 처리하거나 웹 어플리케이션을 작성하는 등 동적 제어에 사용된다

- 사용자의 입력 및 계산
   html의 폼은 입력창만 제공하고
   key, mouse 입력과 계산은 오직 자바스크립트로만 처리가 가능하다

- 웹 페이지의 내용 및 모양의 동적 제어
   html 태그의 속성이나 콘텐츠, css속성값을 변경하여
   웹페이지에 동적인 변화를 일으키는데 활용된다

- 브라우저 제어
   브라우저 윈도의 크기나 모양 변경, 새 윈도우나 탭 열기, 다른 웹사이트 접속 등
   브라우저의 작동을 제어하는데 활용된다

- 웹 서버와의 통신(Ajax)
   웹페이지가 웹서버와 데이터를 주고받을 때 활용된다
   Ajax : Asynchronous Javascript and XML
   웹페이지에서 비동기적으로 데이터를 주고받는 기술

   장점 
   - 웹페이지의 반응성 향상
   - 효율적인 데이터 전송
   - 사용자와 상호작용 할 수 있는 다양한 기능

- 웹 어플리케이션 작성(API)
   자바스크립트 언어로 활용할 수 있는 많은 api를 제공하므로
   웹 브라우저에서 실행되는 다양한 웹 어플리케이션을 개발할 수 있다

2. js 환경 구축
1) node.js
   크롬 V8 Javascript 엔진으로 빌드된 javascript 런타임
   javascript로 작성된 프로그램을 일반 어플리케이션 프로그램처럼 실행시켜주는 런타임이다
   
   2009년 라이언 달이 발표
   브라우저에서만 동작하던 자바스크립트를 브라우저 이외의 환경에서 동작시킬 수 있는 자바스크립트 실행환경
   npm(node package manager) : 자바스크립트 패키지 매니저(node.js에서 사용할 수 있는 모듈들을
      패키지화 해서 모아둔 저장소역할과 패키지 설치 및 관리를 위한 CLI를 제공함)

2) node.js 설치
   구글에서 node.js 검색 > 최상단 링크 클릭 > LTS 버전으로 설치
   
3) Node.js 사용이유
   javascript는 스크립트 언어
   특정 프로그램 안에서만 동작하기 때문에 웹브라우저가 없다면 자바스크립트를 사용할 수 없다
   Node.js는 자바스크립트를 웹 브라우저에서 독립시켜서 Node.js 터미널 프로그램에서 웹브라우저 없이
   자바스크립트를 실행할 수 있다
   Node.js를 통해 Javascript라는 하나의 언어로 서버를 만들 수 있다

4) vs code 확장 프로그램
   code runner 설치
   - 한글 깨짐 확인
   - vs code를 code runner 설치 후 vs code 열려있는 것 모두 닫고 재시작 -> console.log로 확인
   - code runner 설정에서 Code-runner:Executor Map -> Edit in settings.json 클릭 -> 
      "code-runner.executorMap" : { "javascript" : "node", ... } 있는지 확인 후 저장
      아래 2개(.json파일) 도 동일하게 적용되어있는지 확인 -> vs code 열려있는거 모두 다 닫고
      다시 재시작
   - 그래도 안되면 컴퓨터 재부팅 진행

3. 자바스크립트를 작성할 수 있는 위치
1) HTML 태그의 이벤트 리스너 속성에 작성
   HTML 태그내에 이벤트가 발생할 때 처리하는 코드를 등록하는 리스너 속성이 있다
   이 속성에 자바스크립트 코드를 작성할 수 있다

2) <script></script> 내에 작성
   <head></head>, <body></body>, body 태그 밖에 등 어디서든 작성할 수 있다
   웹 페이지 내에서 여러번 작성도 가능하다
   <script src="파일경로"></script> : 외부 js파일을 불러올 때 사용

3) 자바스크립트 파일에 작성
   자바스크립트 코드를 확장자가 .js인 별도의 파일로 저장하고
   <script src="파일경로"></script>를 통해 불러서 사용할 수 있다

4) url 부분에 작성
   <a> 태그의 href 속성 등에서 자바스크립트 코드를 작성할 수 있다
   href 속성에서 자바스크립트 코드를 쓸 때는 javascript 라는 키워드를 작성해야한다

5) 데이터 타입
- 원시타입 
   숫자타입(number) : 정수, 실수 구분없이 숫자 타입
      ex) 50, -50, -3.12, 3.14, ...
      Infinity(무한), NaN(Not a Number 숫자가 아니어서 연산 불가) 특별한 값도 포함된다      

      자바에서는 int, long, double, float
      오라클에서는 number
   논리타입(boolean) : 참, 거짓 값을 나타내는 논리형 타입
      ex) true, false
      
      자바 : boolean
      오라클 : and, or, not 
      
      
- 객체타입