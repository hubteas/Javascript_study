day57
웹개발4 4일차(js 4일차)

함수 -> 객체 -> 배열 -> 자바스크립트의 엔진구조

1. 함수
1) 일반함수
- 함수정의
   function 함수명(매개변수){
      실행할 코드;
      return 리턴값;
   }

- 함수호출 4가지
매개변수 x 리턴값 x      함수명();
매개변수 o 리턴값 x      함수명(인수1, 인수2);
매개변수 x 리턴값 o      console.log(함수명());   변수 = 함수명();
매개변수 o 리턴값 o    console.log(함수명(인수));    변수 = 함수명(인수);

- 디폴트 매개변수
   함수 정의 시 매개변수의 기본값을 지정하는 것
   매개변수의 가장 마지막부터 지정해야한다

- 가변 매개변수
   함수의 정의 시 인수가 몇 개 전달될 지 모를 때 매개변수를 지정하는 것
   (...매개변수명)
   배열형태로 담기고 타입은 object이다

2) 익명함수
   이름이 없는 함수이며 보통 변수에 저장하여 사용한다
   let 변수명 = function (){
      함수기능;
      return 리턴값;
   };

3) 콜백함수
   함수의 매개변수로 전달되는 함수를 의미한다
   모듈화를 시키기 위해 원하는 곳에서 실행하기 위해서 사용한다(재사용성)

4) 즉시실행함수
   한번만 사용하는 함수는 즉시 실행함수로 만들어 사용한다
   즉시 실행함수는 만듦과 동시에 실행이된다
   재사용할 목적이 없으므로 익명함수로 만든다

   (function (매개변수){
      실행할코드;
   })(매개변수로 넘겨줄 값);

5) 화살표함수 ★★★
   익명함수를 더 편하게 만들 수 있는 표기법(자바의 람다식과 유사함)
   
   () => {}

6) 재귀함수
   자기 자신을 호출하는 함수

2. 전역객체
1) GlobalThis
   웹 브라우저 환경에서는 window,
   Node.js 환경에서는 global

2) global
   Node.js 환경에서만 사용되는 전역 객체


3. 객체
1) javascript의 객체
   자바스크립트는 원시 타입값을 제외한 모든 값이 객체
   객체는 프로퍼티(property)와 메소드로 구성된다
   프로퍼티는 키와 값으로 구성되며 값의 위치에 함수가 올 수 있다
   프로퍼티의 값이 함수인 경우 일반함수와 구분하기 위해 메소드라고 부른다

2) 객체 생성
   클래스가 없어도 다양한 방법으로 객체를 만들 수 있다
   객체 리터럴을 이용한 생성이다
   객체 리터럴은 {}을 이용하여 표현한다

   let test = {
      num1 : 10,
      num2 : 20,
      name : "김영선",
      sum : function(){
         return this.num1 + this.num2;
      }
   };

3) 객체 사용
   객체의 프로퍼티에 접근하는 방법은 2가지가 존재한다
   - .을 이용한다
      console.log(test.name);
      console.log(test.sum);
   - []을 이용한다
      []를 사용하면 key를 반드시 ''로 감싸야한다
      console.log(test['name']);

4) 프로퍼티 생성과 삭제
   객체를 생성하고 이후에 객체 내부에 프로퍼티를 생성하거나 삭제하는것이 가능하다
   - 생성
      객체에 존재하지 않는 키에 값을 저장한다
      test.num3 = 2.5;
   - 삭제
      delete를 사용한다
      delet test.num3;


